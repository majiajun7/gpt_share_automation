"""Remove active and extra_info from Device

Revision ID: b0b86145e0d8
Revises: 7db46d3936b6
Create Date: 2025-04-22 00:18:23.311814

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'b0b86145e0d8'
down_revision = '7db46d3936b6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - use batch mode for SQLite ###
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.alter_column('adspower_account_id',
                   existing_type=sa.INTEGER(),
                   nullable=False)
        batch_op.drop_column('extra_info')
        batch_op.drop_column('status')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - use batch mode for SQLite ###
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.alter_column('adspower_account_id',
                   existing_type=sa.INTEGER(),
                   nullable=True)
        # Add columns back - server_default might require separate handling if needed
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('extra_info', sa.TEXT(), nullable=True))

    # Optional: Attempt to set default value after adding the column back
    # This might depend on specific downgrade requirements
    try:
        op.execute("UPDATE devices SET status = 'active' WHERE status IS NULL")
        with op.batch_alter_table('devices', schema=None) as batch_op:
            batch_op.alter_column('status', nullable=False, server_default='active')
    except Exception as e:
        print(f"Warning: Could not fully restore 'status' column default/nullable constraint during downgrade: {e}")


    # ### end Alembic commands ###
